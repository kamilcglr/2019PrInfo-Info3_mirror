package fr.tse.ProjetInfo3.mvc.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import fr.tse.ProjetInfo3.mvc.dto.Hashtag;
import fr.tse.ProjetInfo3.mvc.dto.InterestPoint;
import fr.tse.ProjetInfo3.mvc.repository.SingletonDBConnection;

/**
 * @author ALAMI IDRISSI Taha
 *	in this class we will perform all the actions for the PIs that have a direct relations with the DB 
 *	like Saving , reading , updating PI in the DB
 */
public class InterestPointDAO {
	
	
	/**
	 * in this method we're saving an interestpoint into the DB using singleton pattern to have one instance 
	 * accessing the DB 
	 */
	public InterestPoint saveInterestPoint(InterestPoint interestPoint) {
		Connection connection = SingletonDBConnection.getInstance();
		try { 
			PreparedStatement ps = connection.prepareStatement("INSERT INTO interestpoint(NAME,DESCRIPTION,CREATED_AT) "
															 + "VALUES (?,?,?)");
			ps.setString(1, interestPoint.getName());
			ps.setString(2, interestPoint.getDescription());
			ps.setDate(3, (Date) interestPoint.getDateOfCreation());
			// this method will help us save all the # of a single PI
			saveHashtag(interestPoint);
			ps.executeUpdate();
			ps.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return interestPoint;
	}
	/**
	 * Saving # of an interestpoint  
	 */
	public InterestPoint saveHashtag(InterestPoint interestPoint) {
		Connection connection = SingletonDBConnection.getInstance();
		int interestpoint_id=0;
		try { 
			PreparedStatement ps = connection.prepareStatement("INSERT INTO hashtag(hashtag,interestpoint_id) "
															 + "VALUES (?,?)");
			// we do not have already an information about the id because its autogenerated so 
			// we request it from the db and we save it int the foreign key of a hashtag
			PreparedStatement ps2 = connection.prepareStatement("SELECT interestpoint_id FROM interestpoint WHERE NAME = ?");
			ps2.setString(1, interestPoint.getName());
			
			ResultSet rs = ps2.executeQuery();
			while(rs.next()) 
				interestpoint_id = rs.getInt("interestpoint_id");
			
			for(Hashtag hash:interestPoint.getHashtags()) {
				ps.setString(1, hash.getHashtag());
				ps.setInt(2, interestpoint_id);
				ps.executeUpdate();
			}
			
			ps.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return interestPoint;
	}
	
	/**
	 * here we can get all the data about interestpoints to list them in our window
	 * we query all the info needed about all the PIs
	 */
	
	public List<InterestPoint> getAllInterestPoints(){
		Connection connection = SingletonDBConnection.getInstance();
		List<InterestPoint> interestPoints = new ArrayList<>();
		List<Hashtag> hashtags = null;
		InterestPoint interestPoint = null;
		Hashtag hashtag = null;
		try {
			PreparedStatement ps = connection.prepareStatement("SELECT * FROM interestpoint");
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				interestPoint = new InterestPoint();
				hashtags = new ArrayList<Hashtag>();
				interestPoint.setId(rs.getInt("interestpoint_id"));
				interestPoint.setName(rs.getString("NAME"));
				interestPoint.setDescription(rs.getString("DESCRIPTION"));
				interestPoint.setDateOfCreation(rs.getDate("CREATED_AT"));
				interestPoint.setHashtags(getAllHashtagOfAnInterestPoint(interestPoint));
				interestPoints.add(interestPoint);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return interestPoints;
	}
	
	public List<Hashtag> getAllHashtagOfAnInterestPoint(InterestPoint interestPoint) {
		
		Connection connection = SingletonDBConnection.getInstance();
		List<Hashtag> hashtags = new ArrayList<Hashtag>();
		Hashtag hashtag = null;
		try {
			PreparedStatement ps2 = connection.prepareStatement("SELECT hashtag FROM hashtag WHERE interestpoint_id = ?");
			ps2.setInt(1, interestPoint.getId());
			
			ResultSet rs2 = ps2.executeQuery();
			while(rs2.next()) {
				hashtag = new Hashtag(rs2.getString("hashtag"));
				hashtags.add(hashtag);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return hashtags;
	}
	/**
	 * when clicking on a PI in our list we will use this method so we could search it on the DB
	 */
	public InterestPoint getSelectedInterestPoint(int id) {
		Connection connection = SingletonDBConnection.getInstance();
		InterestPoint interestPoint = new InterestPoint();
		try {
			PreparedStatement ps = connection.prepareStatement("SELECT * FROM interestpoint WHERE id= ?");
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			while(rs.next()){
				interestPoint.setId(rs.getInt("interestpoint_id"));
				interestPoint.setName(rs.getString("NAME"));
				interestPoint.setDescription(rs.getString("DESCRIPTION"));
				interestPoint.setDateOfCreation(rs.getDate("CREATED_AT"));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return interestPoint;
	}

}
